<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eLearnPlayer.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.eLearnPlayer.entity.UserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="User_id" jdbcType="INTEGER" property="userId" />
    <result column="User_name" jdbcType="VARCHAR" property="userName" />
    <result column="User_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="Nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="Sex" jdbcType="VARCHAR" property="sex" />
    <result column="Phone" jdbcType="VARCHAR" property="phone" />
    <result column="Head" jdbcType="VARCHAR" property="head" />
    <result column="Gold" jdbcType="INTEGER" property="gold" />
    <result column="Jewel" jdbcType="INTEGER" property="jewel" />
    <result column="Level" jdbcType="INTEGER" property="level" />
    <result column="Rank" jdbcType="VARCHAR" property="rank" />
    <result column="Medal_id" jdbcType="INTEGER" property="medalId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    User_id, User_name, User_password, Nick_name, Sex, Phone, Head, Gold, Jewel, Level, 
    Rank, Medal_id
  </sql>
  <insert id="insertUserInfo">
    INSERT INTO user_info
    (User_name, User_password, Nick_name, Sex, Phone, Head, Gold, Jewel, Level, `Rank`, Medal_id)
    VALUES
      (#{userInfo.userName}, #{userInfo.userPassword}, #{userInfo.nickName}, #{userInfo.sex}, #{userInfo.phone},
       #{userInfo.head}, #{userInfo.gold}, #{userInfo.jewel}, #{userInfo.level}, #{userInfo.rank}, #{userInfo.medalId})
  </insert>
  <update id="updateUserInfo">
    UPDATE user_info
    SET
        User_name = #{userInfo.userName},
        User_password= #{userInfo.userPassword},
        Nick_name= #{userInfo.nickName},
        Sex= #{userInfo.sex},
        Phone= #{userInfo.phone},
        Head= #{userInfo.head},
        Gold= #{userInfo.gold},
        Jewel= #{userInfo.jewel},
        Level= #{userInfo.level},
        `Rank`= #{userInfo.rank},
        Medal_id= #{userInfo.medalId}
    WHERE User_id = #{userInfo.userId}
  </update>
  <select id="findAll" resultType="com.eLearnPlayer.entity.UserInfo">
    SELECT * from user_info
  </select>
  <select id="checkRepeat" resultType="java.lang.Integer">
    select count (*) from user_info where ${column} = #{value}
  </select>
  <select id="findByUserName" resultType="com.eLearnPlayer.entity.UserInfo">
    select * from user_info where 1=1
    <if test="userName != null and userName !='all' and userName !=''">
      and User_name = #{userName}
    </if>
  </select>
  <select id="findByPhone" resultType="com.eLearnPlayer.entity.UserInfo">
    select * from user_info where 1=1
    <if test="phone != null and phone !='all' and phone !=''">
      and phone = #{phone}
    </if>
  </select>


  <select id="getAllUserData" resultType="com.eLearnPlayer.entity.UserData">
    SELECT
      u.User_id AS "userInfo.userId",
      u.User_name AS "userInfo.userName",
      u.User_password AS "userInfo.userPassword",
      u.Nick_name AS "userInfo.nickName",
      u.Sex AS "userInfo.sex",
      u.phone AS "userInfo.phone",
      u.head AS "userInfo.head",
      u.gold AS "userInfo.gold",
      u.jewel AS "userInfo.jewel",
      u.level AS "userInfo.level",
      u.rank AS "userInfo.rank",
      u.Medal_id AS "userInfo.medalId",
      l.level AS "levelInfo.level",
      l.grade AS "levelInfo.grade",
      m.Medal_id AS "medalInfo.medalId",
      m.Medal_name AS "medalInfo.medalName"
    FROM
      user_info u
      LEFT JOIN level_info l ON u.level = l.level
      LEFT JOIN medal_info m ON u.Medal_id = m.Medal_id
  </select>
  <select id="findUserDataByPhone" resultType="com.eLearnPlayer.entity.UserData">
    SELECT
      u.User_id AS "userInfo.userId",
      u.User_name AS "userInfo.userName",
      u.User_password AS "userInfo.userPassword",
      u.Nick_name AS "userInfo.nickName",
      u.Sex AS "userInfo.sex",
      u.phone AS "userInfo.phone",
      u.head AS "userInfo.head",
      u.gold AS "userInfo.gold",
      u.jewel AS "userInfo.jewel",
      u.level AS "userInfo.level",
      u.rank AS "userInfo.rank",
      u.Medal_id AS "userInfo.medalId",
      l.level AS "levelInfo.level",
      l.grade AS "levelInfo.grade",
      m.Medal_id AS "medalInfo.medalId",
      m.Medal_name AS "medalInfo.medalName"
    FROM
      User_info u
        LEFT JOIN
      Level_info l
      ON u.Level = l.Level
        LEFT JOIN
      Medal_info m
      ON u.Medal_id = m.Medal_id
    WHERE
      u.phone = #{phone}
  </select>

</mapper>

